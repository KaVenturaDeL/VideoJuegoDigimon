import ddf.minim.*;
Minim cadena;
AudioPlayer cancion;

criatura evee;
criatura kero;
criatura chu;
criatura gatomon;
criatura tory;


PImage inicio;
PImage seleccion;
PImage fondo;

float a = 100;
float x = 0;
float h = 0;
float i = 0;

int pantalla = 0;
int numero = 1;
int turno = 1;
int cx = 0;
int cy = 0;
int Digimon1x = 10;
int Digimon1y = 250;
int Digimon2x = 800;
int Digimon2y = 0;

int golpex = 0;
int golpey = 50;
int vidax = 590;
int viday = 10;

int personaje = 0;
int personaje1 = -1;
int personaje2 = -1;

String Elemento[] = {"fuego","agua","aire","tierra"};


void setup()
{
  size (1199,670);
  background(0);
  
  //Imagenes
  inicio = loadImage("Digimon.jpg");
  seleccion = loadImage("SelectYourDig.jpg");
  fondo = loadImage("Ciudad.jpg");
  
  //Criaturas: Nombre, Vida, Golpe1, Golpe2, MovEspecial, Dibujo
  evee = new criatura("criatura evee",100,40,20,50,0);
  kero = new criatura("criatura kero",100,20,30,50,1);
  chu = new criatura("criatura chu",100,40,30,50,2);
  gatomon = new criatura("criatura gatomon",100,30,20,50,3);
  tory = new criatura("criatura tory",100,20,15,50,4);
  
  //Cancion
  cadena = new Minim(this);cancion = cadena.loadFile("SAO.CatchTheMoment.mp3");

}

void draw()
{
    switch(pantalla){
    case 0:
    //imagen (inicio,0,0);
    background(inicio);
    
    if (keyPressed == false){
    }
    else{
    pantalla +=1;
    }
  break;
  case 1:
  background(234,137,154);
  image(seleccion,0,0,1199,670);
  
    textSize(25);
    fill(0,0,0);
    
        text("Evee \n Presiona a",100,550); 
    if (keyPressed){
   if (key == 'a' || key == 'A'){
        pantalla +=1;
      }
    }
    textSize(25);
    fill(0,0,0);
    text("Kero \n Presiona s",300,550);
    if (keyPressed){
   if (key == 's' || key == 'S'){
        pantalla +=1;
      }
    }
    textSize(25);
    fill(0,0,0);
    text("Chu \n Presiona d",500,550);
    if (keyPressed){
   if (key == 'd' || key == 'D'){
        pantalla +=1;
      }
    }
    textSize(25);
    fill(0,0,0);
    text("Gatomon \n Presiona f",700,550);
    if (keyPressed){
   if (key == 'f' || key == 'F'){
        pantalla +=1;
      }
    }
    textSize(25);
    fill(0,0,0);
    text("Tory \n Presiona g",925,550);
    if (keyPressed){
   if (key == 'g' || key == 'G'){
        pantalla +=1;
      }
    }
  
      kero.mostrar(1,200,0,0);
      chu.mostrar(2,200,-30,0);
      gatomon.mostrar(3,200,20,0);
      tory.mostrar(4,150,-30,0);
      
    if(personaje1==-1)
    {
      text("jugador 1", -300, 450);
    }
    if(personaje2==-2)
      {
        text("jugador 2", -400, 450);
      }
    }
    if(pantalla==2)
    {
    background(150,100,130);
    image(fondo,0,0,1199,670);
    
    if (key == 'a'){
    evee.dibujar();
    
  }
  
  if (key == 's'){
    kero.dibujar();
    
  }  
     
  if (key == 'd'){
    chu.dibujar();
            
  }
  
  if (key == 'f'){
    gatomon.dibujar();
    
  }
  if (key == 'g'){
    tory.dibujar();
    
  }
    
    evee.Dibujarvida();
     kero.Dibujarvida();

      if(kero.vida>0 && evee.vida>0)
      {
    
      
    if(kero.vida>0 && evee.vida>0)
    {
   
    //__________________________________Instrucciones de seleccion de personaje
    
     text("Evee \n Presiona a",100,550); 
    if (keyPressed){
   if (key == 'a' || key == 'A'){
        pantalla +=1;
      }
    }
    textSize(25);
    fill(0,0,0);
    text("Kero \n Presiona s",300,550);
    if (keyPressed){
   if (key == 's' || key == 'S'){
        pantalla +=1;
      }
    }
    textSize(25);
    fill(0,0,0);
    text("Chu \n Presiona d",500,550);
    if (keyPressed){
   if (key == 'd' || key == 'D'){
        pantalla +=1;
      }
    }
    textSize(25);
    fill(0,0,0);
    text("Gatomon \n Presiona f",700,550);
    if (keyPressed){
   if (key == 'f' || key == 'F'){
        pantalla +=1;
      }
    }
    textSize(25);
    fill(0,0,0);
    text("Tory \n Presiona g",925,550);
    if (keyPressed){
   if (key == 'g' || key == 'G'){
        pantalla +=1;
      }
    }
    
    //_____________________________ Hasta Aqui
    
     
  //---------------------------------Aqui se dibujan los personajes en la pantalla
  if (key == 'a'){
    evee.mostrar();
      
  }
 
  if (key == 's'){
    kero.mostrar();
    
  }  
     
  if (key == 'd'){
    chu.mostrar();
    
     }
  
  if (key == 'f'){
    gatomon.mostrar();
    
  }
  if (key == 'g'){
    tory.mostrar();
  }

   //_______________________________________________________________Hasta Aqui
    
  void seleccion(){
  rect(50,230,100,100);
textSize(25);
fill(0);
text("criatura evee", 55, 250); 
  textSize(15); 
   text("Presiona Z", 55, 300); 
  if (keyPressed){
   if (key == 'z' || key == 'Z'){
     pantalla +=1; 
   }
  }
       fill(#ff0000);
   rect(175,230,100,100);
   textSize(20);
fill(0);
text("criatura kero", 180, 250); 
     textSize(15); 
   text("Presiona X", 180, 300); 
     if (keyPressed){
   if (key == 'x' || key == 'X'){
     pantalla +=1;
    
   }
  }
          fill(255);
   rect(290,230,100,100);
   textSize(20);
fill(0);
text("criatura chu", 295, 250); 
  textSize(15); 
   text("Presiona C", 295, 300); 
     if (keyPressed){
   if (key == 'c' || key == 'C'){
     pantalla +=1;
   }
  }
   
             fill(#801815);
   rect(420,230,100,100);
   textSize(20);
fill(0);
text("criatura gatomon", 425, 250); 
     textSize(15); 
   text("Presiona V", 425, 300); 
     if (keyPressed){
   if (key == 'v' || key == 'V'){
     gatomon.dibujar();
     pantalla +=1;
   }
  }
   
                fill(#ffff00);
   rect(550,230,100,100);
   textSize(20);
fill(0);
text("criatura tory", 553, 250); 
     textSize(15); 
   text("Presiona B", 553, 300); 
     if (keyPressed){
   if (key == 'b' || key == 'B'){
     pantalla +=1;
     tory.dibujar();
   }
  }

}
  
  if (evee.vida<=0)
  {
   textSize(32); 
        fill(0, 102, 153);
        text("Game Over \nWin Player 2 \nPara volver a jugar presione R", -250, -100);
      }
      
      if(kero.vida<=0)
      {
        textSize(32); 
        fill(0, 102, 153);
        text("Game Over \nWin Player 1 \nPara volver a jugar presione R", -250, -100);
      }
    }
//----------------------teclas para los golpes
  
   if (key == 'z'){
    if(turno==1) evee.golpe1();
    if(turno==2) kero.golpe1();
   
  }
 
  if (key == 'x'){
    if(turno==1) evee.golpe2();
    if(turno==2) kero.golpe2();

    
  }  
     
  if (key == 'c'){
    if(turno==1) evee.golpe3();
    if(turno==2) kero.golpe3();    
     }
  
  //--------------------------------------------------Hasta aqui
  
  if (evee.vida<=0)
  {
   textSize(32); 
        fill(0, 102, 153);
        text("Game Over \nWin Player 2 \nPara volver a jugar presione R", -250, -100);
      }
      
      if(kero.vida<=0)
      {
        textSize(32); 
        fill(0, 102, 153);
        text("Game Over \nWin Player 1 \nPara volver a jugar presione R", -250, -100);
      }
    }

  class criatura
  {
  String nombre;
  int vida;  //hp
  int golpe1; //ataque1
  int golpe2; //ataque2
  int movEspecial; //movimiento
  int dibujo;
  
  criatura(String nombre_, int vida_, int golpe1_, int golpe2_, int movEspecial_, int dibujo_)
  {
    nombre = nombre_;
    vida = vida_;
    golpe1 = golpe1_;
    golpe2 = golpe2_;
    movEspecial = movEspecial_; 
    dibujo = dibujo_;
    
  }
  
void dibujar(){
{
  switch(dibujo){ 
      case 0: //evee
      pushMatrix();
      translate(15,450);
      scale(1);
      noStroke();
      
fill(0);  //pone color al cuadrado
rect(200,30,10,10); //dibuja un cuadrado  //(derecha, abajo, ancho, largo)
rect(210,30,10,10);
rect(50,50,10,10);
rect(50,60,10,10);
rect(50,70,10,10);
rect(50,80,10,10);
rect(50,50,10,10);
rect(50,40,10,10); 
rect(60,40,10,10);
rect(60,90,10,10);
rect(60,100,10,10);
rect(70,50,10,10);
rect(70,110,10,10);
rect(70,120,10,10);
rect(70,130,10,10);
rect(70,140,10,10);
rect(70,150,10,10);
rect(80,50,10,10);
rect(80,60,10,10);
rect(80,40,10,10);
rect(80,100,10,10);
rect(80,110,10,10);
rect(80,160,10,10);
rect(90,40,10,10);
rect(90,60,10,10);
rect(90,70,10,10);
rect(90,80,10,10);
rect(90,90,10,10);
rect(90,120,10,10);
rect(90,160,10,10);
rect(100,40,10,10);
rect(100,150,10,10);
rect(100,90,10,10);
rect(100,130,10,10);
rect(110,50,10,10);
rect(110,70,10,10);
rect(110,80,10,10);
rect(110,140,10,10);
rect(110,150,10,10);
rect(110,160,10,10);
rect(110,100,10,10);
rect(110,110,10,10);
rect(110,120,10,10);
rect(120,50,10,10);
rect(120,80,10,10);
rect(120,130,10,10);
rect(120,150,10,10);
rect(120,170,10,10);
rect(120,180,10,10);
rect(130,60,10,10);
rect(130,130,10,10);
rect(130,160,10,10);
rect(130,190,10,10);
rect(140,60,10,10);
rect(140,70,10,10);
rect(140,100,10,10);
rect(140,110,10,10);
rect(140,120,10,10);
rect(140,140,10,10);
rect(140,160,10,10);
rect(140,190,10,10);
rect(150,60,10,10);
rect(150,120,10,10);
rect(150,100,10,10);
rect(150,140,10,10);
rect(150,160,10,10);
rect(150,170,10,10);
rect(150,190,10,10);
rect(160,60,10,10);
rect(160,140,10,10);
rect(160,160,10,10);
rect(160,180,10,10);
rect(170,60,10,10);
rect(170,50,10,10);
rect(170,140,10,10);
rect(170,160,10,10);
rect(170,180,10,10);
rect(180,40,10,10);
rect(180,130,10,10);
rect(180,150,10,10);
rect(180,160,10,10);
rect(180,170,10,10);
rect(180,180,10,10);
rect(190,40,10,10);
rect(190,80,10,10);
rect(190,130,10,10);
rect(190,140,10,10);
rect(200,60,10,10);
rect(200,70,10,10);
rect(200,90,10,10);
rect(200,100,10,10);
rect(200,110,10,10);
rect(200,120,10,10);
rect(210,50,10,10);
rect(210,40,10,10);


fill(255);
rect(60,50,10,10);
rect(60,60,10,10);
rect(60,70,10,10);
rect(60,80,10,10);
rect(70,60,10,10);
rect(90,100,10,10);
rect(90,110,10,10);
rect(100,100,10,10);
rect(100,110,10,10);
rect(100,120,10,10);
rect(110,130,10,10);
rect(120,140,10,10);
rect(130,140,10,10);
rect(130,150,10,10);
rect(140,150,10,10);
rect(150,110,10,10);
rect(150,150,10,10);
rect(160,150,10,10);
rect(170,150,10,10);
rect(180,140,10,10);


fill(#834418);
rect(70,70,10,10);
rect(70,80,10,10);
rect(70,90,10,10);
rect(70,100,10,10);
rect(80,90,10,10);
rect(80,70,10,10);
rect(80,80,10,10);
rect(80,120,10,10);
rect(80,130,10,10);
rect(80,140,10,10);
rect(80,150,10,10);
rect(90,50,10,10);
rect(90,130,10,10);
rect(90,140,10,10);
rect(90,150,10,10);
rect(100,60,10,10);
rect(100,70,10,10);
rect(100,80,10,10);
rect(100,140,10,10);
rect(110,60,10,10);
rect(110,80,10,10);
rect(110,90,10,10);
rect(120,60,10,10);
rect(120,70,10,10);
rect(120,80,10,10);
rect(120,90,10,10);
rect(120,100,10,10);
rect(120,110,10,10);
rect(120,120,10,10);
rect(120,160,10,10);
rect(130,70,10,10);
rect(130,80,10,10);
rect(130,90,10,10);
rect(130,100,10,10);
rect(130,110,10,10);
rect(130,120,10,10);
rect(130,170,10,10);
rect(130,180,10,10);
rect(140,80,10,10);
rect(140,90,10,10);
rect(140,130,10,10);
rect(140,170,10,10);
rect(140,180,10,10);
rect(150,70,10,10);
rect(150,80,10,10);
rect(150,90,10,10);
rect(150,130,10,10);
rect(150,180,10,10);
rect(160,70,10,10);
rect(160,80,10,10);
rect(160,90,10,10);
rect(160,100,10,10);
rect(160,110,10,10);
rect(160,120,10,10);
rect(160,130,10,10);
rect(160,170,10,10);
rect(150,80,10,10);
rect(170,70,10,10);
rect(170,80,10,10);
rect(170,90,10,10);
rect(170,100,10,10);
rect(170,110,10,10);
rect(170,120,10,10);
rect(170,130,10,10);
rect(170,170,10,10);
rect(180,70,10,10);
rect(180,80,10,10);
rect(180,90,10,10);
rect(180,100,10,10);
rect(180,110,10,10);
rect(180,120,10,10);
rect(190,70,10,10);
rect(190,90,10,10);
rect(190,100,10,10);
rect(190,110,10,10);
rect(190,120,10,10);
rect(100,50,10,10);
rect(180,50,10,10);
rect(180,60,10,10);
rect(190,60,10,10);
rect(190,50,10,10);
rect(200,40,10,10);
rect(200,50,10,10);
popMatrix();
break;

//______________________________________________________________________________________________
      
  case 1: // Kero
    pushMatrix();
    translate(15,450);
      scale(1);
noStroke();
fill(#f98e1a); //naranja
rect(80,50,10,10);
rect(90,50,10,10);
rect(100,50,10,10);
rect(180,50,10,10);
rect(190,50,10,10);
rect(200,50,10,10);
rect(70,60,10,10);
rect(110,60,10,10);
rect(120,60,10,10);
rect(130,60,10,10);
rect(140,60,10,10);
rect(150,60,10,10);
rect(160,60,10,10);
rect(170,60,10,10);
rect(210,60,10,10);
rect(60,70,10,10);
rect(220,70,10,10);
rect(60,80,10,10);
rect(90,80,10,10);
rect(100,80,10,10);
rect(180,80,10,10);
rect(220,80,10,10);
rect(60,90,10,10);
rect(90,90,10,10);
rect(190,90,10,10);
rect(220,90,10,10);
rect(60,100,10,10);
rect(90,100,10,10);
rect(190,100,10,10);
rect(220,100,10,10);
rect(70,110,10,10);
rect(90,110,10,10);
rect(190,110,10,10);
rect(210,110,10,10);
rect(80,120,10,10);
rect(90,120,10,10);
rect(190,120,10,10);
rect(200,120,10,10);
rect(70,130,10,10);
rect(80,130,10,10);
rect(90,130,10,10);
rect(100,130,10,10);
rect(110,130,10,10);
rect(120,130,10,10);
rect(130,130,10,10);
rect(140,130,10,10);
rect(150,130,10,10);
rect(160,130,10,10);
rect(170,130,10,10);
rect(180,130,10,10);
rect(190,130,10,10);
rect(200,130,10,10);
rect(210,130,10,10);

noStroke();
fill(#f7cc87); //amarilloso
rect(80,60,10,10);
rect(80,100,10,10);
rect(90,60,10,10);
rect(100,60,10,10);
rect(180,60,10,10);
rect(190,60,10,10);
rect(200,60,10,10);
rect(70,70,10,10);
rect(100,70,10,10);
rect(110,70,10,10);
rect(120,70,10,10);
rect(130,70,10,10);
rect(140,70,10,10);
rect(150,70,10,10);
rect(160,70,10,10);
rect(170,70,10,10);
rect(180,70,10,10);
rect(210,70,10,10);
rect(70,80,10,10);
rect(110,80,10,10);
rect(120,80,10,10);
rect(130,80,10,10);
rect(140,80,10,10);
rect(150,80,10,10);
rect(160,80,10,10);
rect(170,80,10,10);
rect(210,80,10,10);
rect(70,90,10,10);
rect(100,90,10,10);
rect(110,90,10,10);
rect(120,90,10,10);
rect(130,90,10,10);
rect(140,90,10,10);
rect(150,90,10,10);
rect(160,90,10,10);
rect(170,90,10,10);
rect(180,90,10,10);
rect(210,90,10,10);
rect(70,100,10,10);
rect(100,100,10,10);
rect(110,100,10,10);
rect(120,100,10,10);
rect(130,100,10,10);
rect(140,100,10,10);
rect(150,100,10,10);
rect(160,100,10,10);
rect(170,100,10,10);
rect(180,100,10,10);
rect(200,100,10,10);
rect(210,100,10,10);
rect(80,110,10,10);
rect(100,110,10,10);
rect(120,110,10,10);
rect(130,110,10,10);
rect(140,110,10,10);
rect(150,110,10,10);
rect(160,110,10,10);
rect(180,110,10,10);
rect(200,110,10,10);
rect(100,120,10,10);
rect(110,120,10,10);
rect(120,120,10,10);
rect(130,120,10,10);
rect(150,120,10,10);
rect(160,120,10,10);
rect(170,120,10,10);
rect(180,120,10,10);
 

noStroke();
fill(0); //negro
rect(110,110,10,10);
rect(170,110,10,10);

noStroke();
fill(#8c470c); //cafesoso
rect(80,70,10,10);
rect(90,70,10,10);
rect(190,70,10,10);
rect(200,70,10,10);
rect(80,80,10,10);
rect(90,80,10,10);
rect(190,80,10,10);
rect(200,80,10,10);
rect(80,90,10,10);
rect(200,90,10,10);
rect(140,120,10,10);  
  popMatrix();
break;

//___________________________________________________________________________________________

case 2: // chu
    pushMatrix();
      translate(15,450);
      scale(1);
      
noStroke();
fill(#645d64);
rect(50,130,10,10);
rect(50,140,10,10);
rect(60,120,10,10);
rect(70,110,10,10);
rect(80,100,10,10);
rect(80,130,10,10);
rect(80,140,10,10);
rect(90,90,10,10);
rect(90,120,10,10);
rect(110,70,10,10);
rect(100,80,10,10);
rect(100,110,10,10);
rect(110,100,10,10);
rect(110,130,10,10);
rect(110,140,10,10);
rect(120,80,10,10);
rect(120,90,10,10);
rect(120,120,10,10);
rect(130,90,10,10);
rect(130,110,10,10);
rect(210,90,10,10);
rect(210,110,10,10);
rect(220,80,10,10);
rect(220,90,10,10);
rect(220,120,10,10);
rect(230,70,10,10);
rect(230,100,10,10);
rect(230,130,10,10);
rect(230,140,10,10);
rect(240,110,10,10);
rect(240,80,10,10);
rect(250,90,10,10);
rect(260,100,10,10);
rect(250,120,10,10);
rect(260,130,10,10);
rect(260,140,10,10);
rect(270,110,10,10);
rect(280,120,10,10);
rect(290,130,10,10);
rect(290,140,10,10);

noStroke();
fill(#978ea1);
rect(60,130,10,10);
rect(70,120,10,10);
rect(80,110,10,10);
rect(80,120,10,10);
rect(90,100,10,10);
rect(90,110,10,10);
rect(90,130,10,10);
rect(100,90,10,10);
rect(100,100,10,10);
rect(100,120,10,10);
rect(110,90,10,10);
rect(110,80,10,10);
rect(110,110,10,10);
rect(110,120,10,10);
rect(120,100,10,10);
rect(120,110,10,10);
rect(120,130,10,10);
rect(130,100,10,10);
rect(130,120,10,10);
rect(210,100,10,10);
rect(210,120,10,10);
rect(220,100,10,10);
rect(220,110,10,10);
rect(220,130,10,10);
rect(230,80,10,10);
rect(230,90,10,10);
rect(230,110,10,10);
rect(230,120,10,10);
rect(240,90,10,10);
rect(240,100,10,10);
rect(240,120,10,10);
rect(250,100,10,10);
rect(250,110,10,10);
rect(250,130,10,10);
rect(260,110,10,10);
rect(260,120,10,10);
rect(270,120,10,10);
rect(280,130,10,10);

noStroke();
fill(#bb7d56);
rect(160,70,10,10);
rect(170,70,10,10);
rect(170,90,10,10);
rect(180,70,10,10);
rect(140,90,10,10);
rect(140,100,10,10);
rect(140,110,10,10);
rect(140,120,10,10);
rect(140,130,10,10);
rect(140,140,10,10);
rect(150,80,10,10);
rect(150,90,10,10);
rect(160,80,10,10);
rect(170,80,10,10);
rect(170,170,10,10);
rect(180,80,10,10);
rect(190,80,10,10);
rect(190,90,10,10);
rect(200,90,10,10);
rect(200,100,10,10);
rect(200,110,10,10);
rect(200,120,10,10);
rect(200,130,10,10);
rect(200,140,10,10);

noStroke();
fill(#fff0eb);
rect(150,110,10,10);
rect(150,120,10,10);
rect(150,130,10,10);
rect(150,140,10,10);
rect(150,150,10,10);
rect(160,100,10,10);
rect(160,120,10,10);
rect(160,130,10,10);
rect(160,140,10,10);
rect(160,150,10,10);
rect(160,160,10,10);
rect(170,100,10,10);
rect(170,130,10,10);
rect(170,140,10,10);
rect(170,150,10,10);
rect(170,160,10,10);
rect(180,100,10,10);
rect(180,120,10,10);
rect(180,130,10,10);
rect(180,140,10,10);
rect(180,150,10,10);
rect(180,160,10,10);
rect(190,110,10,10);
rect(190,120,10,10);
rect(190,130,10,10);
rect(190,140,10,10);
rect(190,150,10,10);

noStroke();
fill(0);
rect(160,90,10,10);
rect(180,90,10,10);

noStroke();
fill(#eca6a4);
rect(150,100,10,10);
rect(190,100,10,10);

noStroke();
fill(#d11434);
rect(160,110,10,10);
rect(170,110,10,10);
rect(180,110,10,10);

noStroke();
fill(#f3543e);
rect(170,120,10,10);

noStroke();
fill(#ac6f52);
rect(130,60,10,10);
rect(140,60,10,10);
rect(140,70,10,10);
rect(150,70,10,10);
rect(190,70,10,10);
rect(200,60,10,10);
rect(200,70,10,10);
rect(210,60,10,10);

noStroke();
fill(#a0664e);
rect(130,50,10,10);
rect(140,50,10,10);
rect(150,60,10,10);
rect(190,60,10,10);
rect(200,50,10,10);
rect(210,50,10,10);
  popMatrix();
    break;

//_______________________________________________________________________

case 3: // gatomon
  pushMatrix();
      translate(15,450);
      scale(1);
      
noStroke();
fill(#934D98); 
rect(60,50,10,10);
rect(180,50,10,10);
rect(70,60,10,10);
rect(170,60,10,10);
rect(50,70,10,10);
rect(70,70,10,10);
rect(80,70,10,10);
rect(160,70,10,10);
rect(170,70,10,10);
rect(190,70,10,10);
rect(60,80,10,10);
rect(90,80,10,10);
rect(150,80,10,10);
rect(180,80,10,10);
rect(70,90,10,10);
rect(100,90,10,10);
rect(140,90,10,10);
rect(170,90,10,10);
rect(50,100,10,10);
rect(60,100,10,10);
rect(110,100,10,10);
rect(120,100,10,10);
rect(130,100,10,10);
rect(180,100,10,10);
rect(190,100,10,10);
rect(60,110,10,10);
rect(70,110,10,10);
rect(120,110,10,10);
rect(170,110,10,10);
rect(180,110,10,10);
rect(80,120,10,10);
rect(160,120,10,10);
rect(90,130,10,10);
rect(150,130,10,10);
rect(100,140,10,10);
rect(140,140,10,10);
rect(110,150,10,10);
rect(130,150,10,10);
rect(100,160,10,10);
rect(140,160,10,10);
rect(90,170,10,10);
rect(150,170,10,10);
rect(90,180,10,10);
rect(150,180,10,10);
rect(100,190,10,10);
rect(120,190,10,10);
rect(140,190,10,10);

noStroke();
fill(#85FF64); 
rect(110,120,10,10);
rect(130,120,10,10);

noStroke();
fill(0); 
rect(110,130,10,10);
rect(130,130,10,10);

noStroke();
fill(#68336C); 
rect(110,170,10,10);
rect(110,180,10,10);
rect(110,190,10,10);
rect(130,170,10,10);
rect(130,180,10,10);
rect(130,190,10,10);

noStroke();
fill(255); 
rect(70,80,10,10);
rect(80,80,10,10);
rect(160,80,10,10);
rect(170,80,10,10);
rect(80,90,10,10);
rect(90,90,10,10);
rect(150,90,10,10);
rect(160,90,10,10);
rect(70,100,10,10);
rect(80,100,10,10);
rect(90,100,10,10);
rect(100,100,10,10);
rect(140,100,10,10);
rect(150,100,10,10);
rect(160,100,10,10);
rect(170,100,10,10);
rect(80,110,10,10);
rect(90,110,10,10);
rect(100,110,10,10);
rect(110,110,10,10);
rect(130,110,10,10);
rect(140,110,10,10);
rect(150,110,10,10);
rect(160,110,10,10);
rect(90,120,10,10);
rect(100,120,10,10);
rect(120,120,10,10);
rect(140,120,10,10);
rect(150,120,10,10);
rect(100,130,10,10);
rect(120,130,10,10);
rect(140,130,10,10);
rect(110,140,10,10);
rect(120,140,10,10);
rect(130,140,10,10);
rect(120,150,10,10);
rect(110,160,10,10);
rect(120,160,10,10);
rect(130,160,10,10);
rect(100,170,10,10);
rect(120,170,10,10);
rect(140,170,10,10);
rect(100,180,10,10);
rect(120,180,10,10);
rect(140,180,10,10);
popMatrix();
break; 
    
//___________________________________________________________________________________________________________

case 4: // tory
   pushMatrix();
      translate(15,430);
      scale(1);
      
noStroke();
fill(0); 
rect(70,50,10,10);
rect(150,50,10,10);
rect(200,50,10,10);
rect(210,50,10,10);
rect(60,60,10,10);
rect(80,60,10,10);
rect(140,60,10,10);
rect(160,60,10,10);
rect(190,60,10,10);
rect(220,60,10,10);
rect(90,70,10,10);
rect(100,70,10,10);
rect(110,70,10,10);
rect(120,70,10,10);
rect(130,70,10,10);
rect(170,70,10,10);
rect(200,70,10,10);
rect(230,70,10,10);
rect(50,80,10,10);
rect(170,80,10,10);
rect(200,80,10,10);
rect(230,80,10,10);
rect(50,90,10,10);
rect(170,90,10,10);
rect(180,90,10,10);
rect(190,90,10,10);
rect(230,90,10,10);
rect(50,100,10,10);
rect(170,100,10,10);
rect(220,100,10,10);
rect(50,110,10,10);
rect(170,110,10,10);
rect(50,110,10,10);
rect(50,70,10,10);
rect(50,120,10,10);
rect(80,120,10,10);
rect(140,120,10,10);
rect(170,120,10,10);
rect(220,120,10,10);
rect(50,130,10,10);
rect(80,130,10,10);
rect(140,130,10,10);
rect(170,130,10,10);
rect(220,130,10,10);
rect(60,140,10,10);
rect(100,140,10,10);
rect(110,140,10,10);
rect(120,140,10,10);
rect(160,140,10,10);
rect(220,140,10,10);
rect(70,150,10,10);
rect(110,150,10,10);
rect(150,150,10,10);
rect(220,150,10,10);
rect(80,160,10,10);
rect(90,160,10,10);
rect(100,160,10,10);
rect(110,160,10,10);
rect(120,160,10,10);
rect(130,160,10,10);
rect(140,160,10,10);
rect(170,160,10,10);
rect(190,160,10,10);
rect(220,160,10,10);
rect(90,170,10,10);
rect(160,170,10,10);
rect(180,170,10,10);
rect(190,170,10,10);
rect(220,170,10,10);
rect(90,180,10,10);
rect(120,180,10,10);
rect(130,180,10,10);
rect(160,180,10,10);
rect(170,180,10,10);
rect(180,180,10,10);
rect(200,180,10,10);
rect(210,180,10,10);
rect(80,190,10,10);
rect(120,190,10,10);
rect(130,190,10,10);
rect(160,190,10,10);
rect(70,200,10,10);
rect(80,200,10,10);
rect(100,200,10,10);
rect(120,200,10,10);
rect(160,200,10,10);
rect(80,210,10,10);
rect(90,210,10,10);
rect(100,210,10,10);
rect(110,210,10,10);
rect(160,210,10,10);
rect(120,220,10,10);
rect(130,220,10,10);
rect(140,220,10,10);
rect(150,220,10,10);
rect(210,110,10,10);

noStroke();
fill(#A09E9E); 
rect(70,80,10,10);
rect(90,80,10,10);
rect(100,80,10,10);
rect(110,80,10,10);
rect(120,80,10,10);
rect(130,80,10,10);
rect(150,80,10,10);
rect(90,90,10,10);
rect(100,90,10,10);
rect(110,90,10,10);
rect(120,90,10,10);
rect(130,90,10,10);
rect(220,90,10,10);
rect(80,100,10,10);
rect(90,100,10,10);
rect(100,100,10,10);
rect(110,100,10,10);
rect(120,100,10,10);
rect(130,100,10,10);
rect(140,100,10,10);
rect(210,100,10,10);
rect(60,110,10,10);
rect(70,110,10,10);
rect(90,110,10,10);
rect(100,110,10,10);
rect(110,110,10,10);
rect(120,110,10,10);
rect(130,110,10,10);
rect(150,110,10,10);
rect(160,110,10,10);
rect(60,120,10,10);
rect(100,120,10,10);
rect(110,120,10,10);
rect(120,120,10,10);
rect(160,120,10,10);
rect(60,130,10,10);
rect(160,130,10,10);
rect(70,140,10,10);
rect(150,140,10,10);
rect(180,140,10,10);
rect(80,150,10,10);
rect(140,150,10,10);
rect(170,150,10,10);
rect(180,150,10,10);
rect(160,160,10,10);
rect(180,160,10,10);
rect(100,170,10,10);
rect(170,170,10,10);
rect(100,180,10,10);
rect(110,180,10,10);
rect(90,190,10,10);
rect(100,190,10,10);
rect(110,190,10,10);
rect(90,200,10,10);
rect(110,200,10,10);
rect(120,210,10,10);
rect(140,210,10,10);

noStroke();
fill(#D3D3D3); 
rect(70,60,10,10);
rect(150,60,10,10);
rect(200,60,10,10);
rect(210,60,10,10);
rect(60,70,10,10);
rect(70,70,10,10);
rect(80,70,10,10);
rect(140,70,10,10);
rect(150,70,10,10);
rect(160,70,10,10);
rect(210,70,10,10);
rect(220,70,10,10);
rect(60,80,10,10);
rect(80,80,10,10);
rect(140,80,10,10);
rect(160,80,10,10);
rect(210,80,10,10);
rect(220,80,10,10);
rect(60,90,10,10);
rect(80,90,10,10);
rect(140,90,10,10);
rect(160,90,10,10);
rect(200,90,10,10);
rect(210,90,10,10);
rect(60,100,10,10);
rect(70,100,10,10);
rect(150,100,10,10);
rect(160,100,10,10);
rect(180,100,10,10);
rect(190,100,10,10);
rect(200,100,10,10);
rect(180,110,10,10);
rect(190,110,10,10);
rect(200,110,10,10);
rect(180,120,10,10);
rect(190,120,10,10);
rect(200,120,10,10);
rect(210,120,10,10);
rect(180,130,10,10);
rect(190,130,10,10);
rect(200,130,10,10);
rect(210,130,10,10);
rect(170,140,10,10);
rect(190,140,10,10);
rect(200,140,10,10);
rect(210,140,10,10);
rect(160,150,10,10);
rect(190,150,10,10);
rect(200,150,10,10);
rect(210,150,10,10);
rect(150,160,10,10);
rect(200,160,10,10);
rect(210,160,10,10);
rect(110,170,10,10);
rect(130,170,10,10);
rect(140,170,10,10);
rect(150,170,10,10);
rect(200,170,10,10);
rect(210,170,10,10);
rect(140,180,10,10);
rect(150,180,10,10);
rect(140,190,10,10);
rect(150,190,10,10);
rect(130,200,10,10);
rect(140,200,10,10);
rect(150,200,10,10);
rect(130,210,10,10);
rect(150,210,10,10);

noStroke();
fill(255); 
rect(80,110,10,10);
rect(140,110,10,10);
rect(70,120,10,10);
rect(90,120,10,10);
rect(130,120,10,10);
rect(150,120,10,10);
rect(70,130,10,10);
rect(90,130,10,10);
rect(100,130,10,10);
rect(110,130,10,10);
rect(120,130,10,10);
rect(130,130,10,10);
rect(150,130,10,10);
rect(80,140,10,10);
rect(90,140,10,10);
rect(130,140,10,10);
rect(140,140,10,10);
rect(90,150,10,10);
rect(100,150,10,10);
rect(120,150,10,10);
rect(130,150,10,10);
rect(120,170,10,10);


noStroke();
fill(#FFC9C9); 
rect(70,90,10,10);
rect(150,90,10,10);
popMatrix();
break;

  }
}
void Dibujarvida()
  {
    int hp=vida;
    if(jugador==1) //barra de vida del 1er jugador
    {
      fill(#C3FF00);
      rect(10,20,hp*5,40); 
    }
    if(jugador==2) //barra de vida del 2do jugador
    {
      fill(#C3FF00);
      rect(vidax,viday,hp*5,40);
    }
  }
  
  void golpe1()  //golpe de circulo
  {
    int efecto = 12;
    int h=(int)random(110);
    int j=(int)random(100);        
    int critico = (int)random(100);
    if(critico>=0 && critico<=30) efecto=(int)(1.5*efecto);
    //______________________________________1er golpe del jugador 1
    if(jugador==1)
    {
      fill(random(255),50,100);
      ellipse(golpex-700, 50, h, j);  //golpex = distancia de la particula en x, 50 = distancia de la particula en y
      golpex = golpex+5; //cuanto tarda en impactar al objetivo
      if(golpex==800) //cuanto tarda en impactar al objetivo
      {
        vidax=vidax+ efecto*5;
        kero.vida=kero.vida-efecto;
        golpex = 0;
        turno=2;
        key = 0;
      }
    }
    //______________________________________ 1er golpe del jugador 2
    if(jugador==2)
    {
      fill(random(255),50,100);
      ellipse(golpex, 50, h, j);
      golpex = golpex-5;
      if(golpex==-700)
      {
        key = 0;
        turno=1;
        evee.vida=evee.vida-efecto;
        golpex = 0;
      }
    }
  }
  
  void golpe2() //Golpe de Triangulo
  {
    int efecto=16;  //efecto = efecto del golpe
    int critico = (int)random(100);
    if(critico>=0 && critico<=20) efecto=(int)(1.5*efecto);
    fill(255, random(50),50);
    int y1,y2,y3;
    y1=(int)random(25);
    y2=(int)random(25);
    y3=(int)random(25);
    //___________________________2do golpe del jugador 1
    if(jugador==1)
    {
      triangle(golpex-700,50+y1,golpex -750,50+y2,golpex-600,50+y3);
      //triangle(-700,50,-800,60,-750,70);
      golpex = golpex + 5;
      if(golpex==750)
      {
        vidax=vidax + efecto*5;
        key=0;
        turno=2;
        kero.vida=kero.vida - efecto;
        golpex = 0;
      }
    }
    //___________________________2do golpe del jugador 2
    if(jugador==2)
    {
      triangle(golpex,50-y1,golpex-50,50-y2,golpex+30,50-y3);
      //triangle(0,50,10,60,50,70);
      golpex = golpex - 5;
      if(golpex==-700)
      {
        key=0;
        turno=1;
        evee.vida=evee.vida-efecto;
        golpex = 0;
      }
    }
  }
  void golpe3() // golpe de ovalo
  {
    int y=(int)random(30);
    int r=(int)random(30);
    
    int efecto=20;  //efecto = efecto del golpe
    int critico = (int)random(100);
    if(critico>=0 && critico<=10) efecto=(int)(1.5*efecto);
    //_______________________________3er golpe del jugador 1
    if(jugador==1)
    {
      fill(50,100,random(100));
      ellipse(golpex-700, 50+y, r+60, r);
      golpex = golpex+5;
      if(golpex==800)
      {
        key=0;
        turno=2;
        vidax=vidax+efecto*5;
        kero.vida=kero.vida-efecto;
        golpex = 0;
      }
    }
    //_______________________________3er golpe del jugador 2
    if(jugador==2)
    {
      fill(50,100,random(255));
      ellipse(golpex, 50-y, r+60, r);
      golpex = golpex-5;
      if(golpex==-700)
      { 
        key=0;
        turno=1;
        evee.vida=evee.vida-efecto;
        golpex = 0;
      }
    }
  
}//Clase


void inicio()
{
  fill(155,95,240);
  noStroke();
  ellipse(random(1100),random(500), random(15), random(15));
  ellipse(random(1100),random(500), random(30), random(30));
  
}

void keyPressed()
{
  if (keyPressed == false){
    }
    else{
    cancion.play();
  }
  if(key=='r')
  {
    cancion.pause();
    cancion.rewind();
  }
  if(pantalla==1)
  {
    if(personaje >=0 && personaje<=4) // && es "y" se deben cumplir las dos opciones mientras || significa "o" que solo alguna de las opciones debe de cumplirse
    {
      if(key=='d')
      {
        if(personaje==4) return;
        cx=cx+200;
        personaje = personaje+1;
        key=0;
      }
      if(key=='a')
      {
        if(personaje==0) return;
        cx=cx-200;
        personaje = personaje-1;
        key=0;
      }
      if(personaje1==-1)
      {
        if(key=='\n')
        {
          personaje1 = personaje;
          personaje2 = -2;
          personaje = 0;
          cx = 0;
          cy = 0;
          key = 0;          
        }
      }
      if(personaje2==-2)
      {       
        if(key=='\n')
        {
          personaje2 = personaje;
          personaje = 0;
          cx = 0;
          cy = 0;
          key = 0;  
          pantalla = 2;
        }
      }

  }
  if(pantalla==2)
  {
    if(kero.vida<=0 || evee.vida<=0)
    {
      if(key=='r')
      {
        pantalla=0;
      }
    }
  }
}}}}
